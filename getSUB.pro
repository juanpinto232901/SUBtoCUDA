# ----------------------------------------------------
# This file is generated by the Qt Visual Studio Tools.
# ------------------------------------------------------
QT += opengl
TEMPLATE = app
TARGET = getSUB
DESTDIR = ./w64
CONFIG += debug
DEFINES += _WINDOWS _UNICODE _ENABLE_EXTENDED_ALIGNED_STORAGE WIN64 QT_DEPRECATED_WARNINGS USE_CPU QT_OPENGL_LIB QT_WIDGETS_LIB THREADSUB
INCLUDEPATH += ./GeneratedFiles/$(ConfigurationName) \
    ./GeneratedFiles \
    . \
    ./sdl/include \
    ./cwipc_util/include \
    ./cwipc_codec/include \
    ./../../../QT/QT5.12.1/5.12.1/MSVC2017_64/include \
    ./../../../QT/QT5.12.1/5.12.1/MSVC2017_64/include/QtOpenGL \
    ./../../../QT/QT5.12.1/5.12.1/MSVC2017_64/include/QtWidgets \
    ./../../../QT/QT5.12.1/5.12.1/MSVC2017_64/include/QtGui \
    ./../../../QT/QT5.12.1/5.12.1/MSVC2017_64/include/QtANGLE \
    ./../../../QT/QT5.12.1/5.12.1/MSVC2017_64/include/QtCore \
    ./debug \
    ./../../../QT/QT5.12.1/5.12.1/MSVC2017_64/mkspecs/win32-msvc
LIBS += -L"./sdl/lib/x64" \
    -L"./cwipc_codec/lib/Debug" \
    -L"./cwipc_util/lib/Debug" \
    -l"C:/Program Files (x86)/Windows Kits/10/lib/10.0.17134.0/um/x64/opengl32" \
    -lsdl/lib/x64/SDL \
    -lcwipc_codec/lib/Debug/cwipc_codec \
    -lcwipc_codec/lib/Debug/cloud_codec_v2 \
    -lcwipc_codec/lib/Debug/pcl_jpeg_io \
    -lcwipc_util/lib/Debug/cwipc_util
DEPENDPATH += .
#MOC_DIR += $(Configuration)
OBJECTS_DIR += debug
UI_DIR += .
RCC_DIR += ./GeneratedFiles

HEADERS += ./CapturSUB.h \
    ./CapturSUBThread.h \
    ./GLMessages.h \
    ./GLVertexBuffers.h \
    ./TimerHQ.h \
    ./qvector4duchar.h \
    ./signals_unity_bridge.h \
    ./mainwindow.h \
    ./safeMain.h
SOURCES += ./CapturSUB.cpp \
    ./CapturSUBThread.cpp \
    ./GLMessages.cpp \
    ./GLVertexBuffers.cpp \
    ./TimerHQ.cpp \
    ./main.cpp \
    ./mainwindow.cpp \
    ./safeMain.cpp
FORMS += ./mainwindow.ui

WUSE_CUDA = YES
DEFINES += USE_CUDA_TREADS_ONE

contains( WUSE_CUDA, YES ) {
    DEFINES *= USE_CUDA

    unix:!macx {
        QMAKE_CXXFLAGS_DEBUG += -pg
        QMAKE_LFLAGS_DEBUG += -pg
    }
    # Path to cuda SDK install
    CUDA_SOURCES = vrtg01.cu
    unix:!macx {
#        CUDA_SDK = /home/juanpinto/QT_OpenCL/qt-labs-opencl_matrix3x3/CUDA
        CUDA_DIR = /usr/local/cuda-6.5
    }
    win32 {
        CUDA_SDK = D:/i2cat_vrtogether/CUDA
        CUDA_DIR = "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1"
    }
    CUDA_ARCH = sm_30
    # nvcc flags (ptxas option verbose is always useful)
    #NVCCFLAGS = -g -G -O0 #-pg #-keep --keep-dir=obj
    NVCCFLAGS = -O6 -maxrregcount=48 --ptxas-options=-v
    GENCODE_FLAGS += -gencode arch=compute_30,code=compute_30


    # include paths
    INCLUDEPATH *= $$CUDA_DIR/include
    INCLUDEPATH *= $$CUDA_SDK/inc/
    # lib dirs
    QMAKE_LIBDIR += $$CUDA_DIR/lib64
#    QMAKE_LIBDIR += $$CUDA_SDK/lib
#    QMAKE_LIBDIR += $$CUDA_SDK/common/lib
    unix:!macx {
        LIBS *= -L/usr/lib
    }
    win32 {
        LIBS *= -L"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64"
    }
    LIBS += -lcuda -lcudart
    # join the includes in a line
    CUDA_INC = $$join(INCLUDEPATH,' -I','-I',' ')
        win32 {
            PROJECT_DIR = $$system(echo %cd%)
        }

    GENPTX = YES
    contains(GENPTX, YES) {
        message(bezierpatch Adding PTX)
        OPENCL_SOURCES = $$PROJECT_DIR/vrtg01.cu
        cuda_PTX.CONFIG = no_link target_predeps
        cuda_PTX.input =  OPENCL_SOURCES
        cuda_PTX.output = $$PROJECT_DIR/vrtg01_cooda.ptx
        cuda_PTX.variable_out = .
        cuda_PTX.commands = $$CUDA_DIR/bin/nvcc $$NVCCFLAGS --machine 64 -arch=sm_30 $$GENCODE_FLAGS -ptx $$OPENCL_SOURCES -o ${QMAKE_FILE_OUT}
        # Tell Qt that we want add more stuff to the Makefile
        QMAKE_EXTRA_COMPILERS += cuda_PTX
        message(VRtogether cuda_PTX_commands $$cuda_PTX.commands)


    }

    CUDA2 = NO
    contains(CUDA2, YES){
        unix:!macx {
                cuda2.input = CUDA_SOURCES
                cuda2.output = ../obj/${QMAKE_FILE_BASE}_cuda.o
                cuda2.commands = $$CUDA_DIR/bin/nvcc -keep -keep-dir ../temp -odir ../temp $$NVCCFLAGS --machine 64 -arch=sm_30 $$GENCODE_FLAGS $$CUDA_INC $$LIBS -o ${QMAKE_FILE_OUT} -c ${QMAKE_FILE_NAME}
        }
        win32 {
                cuda2.input = CUDA_SOURCES
                cuda2.output = ${QMAKE_FILE_BASE}_cuda.o
                cuda2.commands = $$CUDA_DIR/bin/nvcc -keep -keep-dir ../temp -odir ../temp $$NVCCFLAGS --machine 64 -arch=sm_30 $$GENCODE_FLAGS $$CUDA_INC $$LIBS -DWIN32 -ID:/i2cat_vrtogether/CUDA -ID:/i2cat_vrtogether/CUDA/inc -LLIBCMT --compile -D_MBCS -Xcompiler "/EHsc,/W3,/nologo,/O2,/Zi,/MD " $$PROJECT_DIR/${QMAKE_FILE_NAME}

                # Work and generate ptx
                # "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v6.5\bin\nvcc.exe" -keep -keep-dir "E:\QT_OpenCL\qt-labs-opencl_matrix3x3\demos\nurbs\temp" -odir E:\QT_OpenCL\qt-labs-opencl_matrix3x3\demos\nurbs\temp -O6 -maxrregcount=48 --ptxas-options=-v --machine 32 -arch=sm_30 -gencode arch=compute_30,code=compute_30 -IE:/QT_OpenCL/qt-labs-opencl_matrix3x3/ -IE:/opencv/build_vs/include -IE:/opencv/build_vs/include/opencv -IE:/opencv/build_vs/include/opencv2 -I"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v6.5/include" -IE:/QT_OpenCL/qt-labs-opencl_matrix3x3/CUDA/inc  -LE:/opencv/build_vs/x86/vc10/lib -lopencv_core -lopencv_imgproc -lopencv_highgui -lopencv_ml -lopencv_video -lopencv_features2d -lopencv_calib3d -lopencv_objdetect -lopencv_contrib -lopencv_legacy -lopencv_flann -lopencv_nonfree -L"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v6.5\lib\Win32" -lcuda -lcudart -DWIN32 -IE:/QT_OpenCL/qt-labs-opencl_matrix3x3 -IE:/QT_OpenCL/qt-labs-opencl_matrix3x3/CUDA/inc -LLIBCMT --compile -D_MBCS -Xcompiler " /EHsc /W3 /nologo /O2 /Zi /MD "  E:\QT_OpenCL\qt-labs-opencl_matrix3x3\demos\nurbs\bezierpatch3x3.cu
                message(VRtogether CUDA_command $$cuda2.commands)
        }
        unix:!macx {
                cuda2.dependency_type = TYPE_C
                cuda2.depend_command = $$CUDA_DIR/bin/nvcc -M $$NVCCFLAGS $$CUDA_INC ${QMAKE_FILE_NAME}
                QMAKE_EXTRA_COMPILERS += cuda2
        }
        # Tell Qt that we want add more stuff to the Makefile


        win32 {
            PROJECT_DIR = $$system(echo %cd%)
        }
    }
}

